package javaArduino;

/* Arduino(아두이노) 이탈리아어 - 강한친구, 강력한친구 라는 의미
 * 이탈리아에서 만든 오픈소스 하드웨어
 * 
 * 아두이노는 컴퓨터가 아님, OS나 응용프로그램을 설치할 수 없음
 * OS와 응용프로그램을 설치할 수 있는 라즈베리파이와는 차이가 있음.
 * 라뗴팬더는 싱글보드 컴퓨터, 라떼팬더와 아두이노보드를 연결해서 사용
 * 
 * 아두이노는 Micro-Controller. 이식된 코드를 수행하는 단순한 기계가 아두이노
 * 
 * 아두이노와 각광을 받기 시작한 이유는 IoT와 연결되기 때문
 * 
 * IoT(Internet of Things) 사물인터넷
 * 일반적인 사물에 통신장비를 결합하고 고도의 통신기술을 이용하여 특별한 작업을 수행하는 장비
 * 
 * 사물인터넷을 구현하기 위해서 그 안에 들어가는 Controller가 가져야 하는 조건
 * 1. 저렴한 가격
 * 2. 프로그램 작성과 프로그램 이식의 용이
 * 3. 센서와 액츄에이터의 쉬운 사용
 * 
 * 아두이노는 브랜드명, 그 안에 여러가지 버전이 존재
 * Uno  => 가장 대표적인 모델(버전)
 * Mega => 크기가 크지만 꽤나 복잡한 처리를 할 수 있는 버전
 * Mini => 크기가 아주 작은 버전
 * etc... 굉장히 다양한 버전이 존재하고 우리 목적에 맞게 선택해서 사용
 * 
 * 전류와 전압
 * 전압 => + -> -로 전류가 흐름
 * 기억해야 하는 전기상식
 * 전압은 기호로 V(Voltage)를 이용하고 단위로는 V(볼트)
 * 전류는 기호로 I(Intensity)를 이용하고 단위로는 A(암페어)
 * 저항은 기호로 R(Resistance)을 이용하고 단위로는 옴
 * V = IR (전압 = 전류 * 저항) => 전류 = 전압 / 저항
 * 
 * 센서는 일반적으로 주위환경에 대한 정보를 수집
 * 온도센서, 습도센서, 거리센서, 밝기센서 등을 이용가능
 * 아두이노가 어떤 활동을 할 수 있도록 도와주는 전자부품이 존재
 * 액츄에이터 => LED, 모터, 스피커
 * 
 * 저항은 전기를 열로 바꿔주는 전자부품
 * 저항의 값을 알아내는 방법이 존재
 * 
 * Breadborad(빵판)
 * 여러 개의 전자기기를 연결결하다보면 헤더 소켓이 부족
 * 헤더 소켓을 확장시켜서 사용할 목적으로 이용
 * 가운데있는 칸들은 세로로 연결되어있고, +, -를 의미하는 위아래의 칸들은 가로로 연결되어있다.
 * 
 * 아두이노를 제어하는 방법에는 디지털, 아날로그 방식이 존재
 * 아두이노 보드에는 헤더소켓이라고 부르는 점퍼와이어를 꽂을 수 있는 홈이 있다. => 핀(pin)
 * 
 * 아두이노 UNO인 경우 Digital이라고 표현된 곳이 있다.
 * 디지털 Pin은 총 13개가 존재하는데 0번과 1번은 Serial통신에 사용되기 때문에 이 Pin은 사용을 지양
 * 2번부터 13번까지의 번호중에 하나를 선택하여 디지털 처리
 * 5V, 3V에서 전류가 흘러나와서 GRN(Ground)로 들어가야한다.
 * 
 * 프로그램 코드를 작성해서 아두이노에 이식
 * 아두이노 IDE를 다운로드받아서 설치
 * 
 * LED => 전압(2V), 전류(15mA)
 * 전압 = 전류 * 저항	
 */
public class ArduinoTest {

}
